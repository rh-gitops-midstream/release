apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: update-digest-for-helm
spec:
  params:
    - name: SOURCE_ARTIFACT
      type: string
      description: The Trusted Artifact URI pointing to the artifact with the application source code.
    - name: CHART_CONTEXT
      type: string
      description: Path to Chart directory.
  steps:
    - name: use-trusted-artifact
      # pin the image to a digest, Konflux will automatically send you updates
      image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:9b180776a41d9a22a1c51539f1647c60defbbd55b44bbebdd4130e33512d8b0d
      args:
        - use
        - $(params.SOURCE_ARTIFACT)=/tekton/home/source

    - name: update-digest
      # prefer Red Hat images for security
      image: registry.access.redhat.com/ubi9/ubi-minimal:9.5@sha256:a50731d3397a4ee28583f1699842183d4d24fadcc565c4688487af9ee4e13a44
      workingDir: /tekton/home/source
      args:
        - "$(params.CHART_CONTEXT)"
      script: |
        #!/bin/bash
        set -euo pipefail

        microdnf -y install skopeo yq

        echo "--> Parsing values.yaml in Directory ..."

        VALUES_FILE="$(params.CHART_CONTEXT)/values.yaml"
        CONFIG_FILE="./config.yaml"
        IMAGE=$(yq  eval '.konfluxImages[] | select(.name == "argocd-agent") | .buildRef' config.yaml)
        RELEASE_TAG=$(yq  eval '.sources[] | select(.path == "sources/argocd-agent") | .ref' config.yaml)

        NEW_IMAGE_DIGEST=$(skopeo inspect --override-os linux --override-arch amd64  docker://${NEW_IMAGE}:${RELEASE_TAG}  | yq '.Digest')

        # fetch Digest of latest release
        yq  eval '.sources[] | select(.path == "sources/argocd-agent") | .ref' config.yaml

        # update Digest in the values file
        yq -i ".imageTag = \"$NEW_IMAGE_DIGEST\""  "$VALUES_FILE"
