# Copyright 2021 Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ------------------------------------------------------------------------

####################################################################################################
# Argo CD Build stage which performs the actual build of Argocd-cli binaries
####################################################################################################
FROM registry.redhat.io/rhel8/go-toolset:1.24.6 AS argo-cd-cli-build

USER root

COPY sources/argo-cd /go/src/github.com/argoproj/argo-cd
WORKDIR /go/src/github.com/argoproj/argo-cd

ARG CI_ARGO_CD_VERSION
ARG CI_ARGO_CD_COMMIT
ARG CI_VERSION
ENV EXTRA_BUILD_INFO="{Vendor Information: Red Hat OpenShift GitOps version: $CI_VERSION}"

ENV PACKAGE="github.com/argoproj/argo-cd/v3/common" \
    GIT_TREE_STATE="clean"

ENV LDFLAGS="-X ${PACKAGE}.Version=${CI_ARGO_CD_VERSION} \
    -X ${PACKAGE}.gitCommit=${CI_ARGO_CD_COMMIT} \
    -X ${PACKAGE}.gitTreeState=clean \
    -X ${PACKAGE}.buildDate=$(date +%Y-%m-%dT%H:%M:%SZ) \
    -X ${PACKAGE}.extraBuildInfo=${EXTRA_BUILD_INFO}"

RUN go mod download
RUN make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS" BIN_NAME=argocd-linux-amd64 GOOS=linux GOARCH=amd64 argocd-all    && \
    make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS"  BIN_NAME=argocd-linux-arm64 GOOS=linux GOARCH=arm64 argocd-all    && \
    make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS"  BIN_NAME=argocd-linux-ppc64le GOOS=linux GOARCH=ppc64le argocd-all    && \
    make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS"  BIN_NAME=argocd-linux-s390x GOOS=linux GOARCH=s390x argocd-all    && \
    make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS"  BIN_NAME=argocd-windows-amd64.exe GOOS=windows GOARCH=amd64 argocd-all
    # TODO: Enable Darwin builds
    #make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS"  BIN_NAME=argocd-darwin-amd64 GOOS=darwin GOARCH=amd64 argocd-all          && \
    #make GIT_TAG="v$(cat VERSION)" GOFLAGS="-mod=mod" LDFLAGS="$LDFLAGS"  BIN_NAME=argocd-darwin-arm64 GOOS=darwin GOARCH=arm64 argocd-all            

####################################################################################################
# Package the binaries into the image using UBI (Universal Base Image)
####################################################################################################
FROM registry.access.redhat.com/ubi8/ubi

# This directory is checked by the ecosystem-cert-preflight-checks task in Konflux
COPY LICENSE /licenses/

# Set the user to the default non-root user provided by UBI
USER 999

WORKDIR /releases

# Copy the built plugin binaries into the final image
COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-linux-amd64 /releases
COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-linux-arm64 /releases
COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-linux-ppc64le /releases
COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-linux-s390x /releases
COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-windows-amd64.exe /releases
#COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-amd64 /releases
#COPY --from=argo-cd-cli-build /go/src/github.com/argoproj/argo-cd/dist/argocd-darwin-arm64 /releases


# Add required labels
LABEL name="Argo CD CLI binaries" \
    summary="Argo CD CLI binaries" \
    description="Argo CD CLI binaries for various platforms, including Darwin and Linux."